/*
The SMS Works API

The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed UK messages are refunded.

API version: 1.9.0
Contact: support@thesmsworks.co.uk
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OTPVerifyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OTPVerifyResponse{}

// OTPVerifyResponse Response schema for the /otp/verify method
type OTPVerifyResponse struct {
	// The mobile number that the OTP was sent to
	Destination *string `json:"destination,omitempty"`
	// The status of the OTP. If the passcode is used within the validity period then this will be 'VERIFIED', otherwise it will be 'EXPIRED'
	Status *string `json:"status,omitempty"`
	// The passcode used.
	Passcode *float32 `json:"passcode,omitempty"`
	// The length of time in seconds for which the generated passcode is valid.
	Validity *float32 `json:"validity,omitempty"`
	// A JSON object storing data supplied when this passcode was generated, for use in your application.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// The ISO 8601 date/time at which this OTP was created
	Created *string `json:"created,omitempty"`
	// The ISO 8601 date/time at which this OTP expires
	Expires *string `json:"expires,omitempty"`
	// The ISO 8601 date/time at which this OTP was modified (typically when it was verified)
	Modified *string `json:"modified,omitempty"`
}

// NewOTPVerifyResponse instantiates a new OTPVerifyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOTPVerifyResponse() *OTPVerifyResponse {
	this := OTPVerifyResponse{}
	return &this
}

// NewOTPVerifyResponseWithDefaults instantiates a new OTPVerifyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOTPVerifyResponseWithDefaults() *OTPVerifyResponse {
	this := OTPVerifyResponse{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *OTPVerifyResponse) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPVerifyResponse) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *OTPVerifyResponse) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *OTPVerifyResponse) SetDestination(v string) {
	o.Destination = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OTPVerifyResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPVerifyResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OTPVerifyResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OTPVerifyResponse) SetStatus(v string) {
	o.Status = &v
}

// GetPasscode returns the Passcode field value if set, zero value otherwise.
func (o *OTPVerifyResponse) GetPasscode() float32 {
	if o == nil || IsNil(o.Passcode) {
		var ret float32
		return ret
	}
	return *o.Passcode
}

// GetPasscodeOk returns a tuple with the Passcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPVerifyResponse) GetPasscodeOk() (*float32, bool) {
	if o == nil || IsNil(o.Passcode) {
		return nil, false
	}
	return o.Passcode, true
}

// HasPasscode returns a boolean if a field has been set.
func (o *OTPVerifyResponse) HasPasscode() bool {
	if o != nil && !IsNil(o.Passcode) {
		return true
	}

	return false
}

// SetPasscode gets a reference to the given float32 and assigns it to the Passcode field.
func (o *OTPVerifyResponse) SetPasscode(v float32) {
	o.Passcode = &v
}

// GetValidity returns the Validity field value if set, zero value otherwise.
func (o *OTPVerifyResponse) GetValidity() float32 {
	if o == nil || IsNil(o.Validity) {
		var ret float32
		return ret
	}
	return *o.Validity
}

// GetValidityOk returns a tuple with the Validity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPVerifyResponse) GetValidityOk() (*float32, bool) {
	if o == nil || IsNil(o.Validity) {
		return nil, false
	}
	return o.Validity, true
}

// HasValidity returns a boolean if a field has been set.
func (o *OTPVerifyResponse) HasValidity() bool {
	if o != nil && !IsNil(o.Validity) {
		return true
	}

	return false
}

// SetValidity gets a reference to the given float32 and assigns it to the Validity field.
func (o *OTPVerifyResponse) SetValidity(v float32) {
	o.Validity = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *OTPVerifyResponse) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPVerifyResponse) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *OTPVerifyResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *OTPVerifyResponse) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *OTPVerifyResponse) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPVerifyResponse) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *OTPVerifyResponse) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *OTPVerifyResponse) SetCreated(v string) {
	o.Created = &v
}

// GetExpires returns the Expires field value if set, zero value otherwise.
func (o *OTPVerifyResponse) GetExpires() string {
	if o == nil || IsNil(o.Expires) {
		var ret string
		return ret
	}
	return *o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPVerifyResponse) GetExpiresOk() (*string, bool) {
	if o == nil || IsNil(o.Expires) {
		return nil, false
	}
	return o.Expires, true
}

// HasExpires returns a boolean if a field has been set.
func (o *OTPVerifyResponse) HasExpires() bool {
	if o != nil && !IsNil(o.Expires) {
		return true
	}

	return false
}

// SetExpires gets a reference to the given string and assigns it to the Expires field.
func (o *OTPVerifyResponse) SetExpires(v string) {
	o.Expires = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *OTPVerifyResponse) GetModified() string {
	if o == nil || IsNil(o.Modified) {
		var ret string
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPVerifyResponse) GetModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *OTPVerifyResponse) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given string and assigns it to the Modified field.
func (o *OTPVerifyResponse) SetModified(v string) {
	o.Modified = &v
}

func (o OTPVerifyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OTPVerifyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Passcode) {
		toSerialize["passcode"] = o.Passcode
	}
	if !IsNil(o.Validity) {
		toSerialize["validity"] = o.Validity
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Expires) {
		toSerialize["expires"] = o.Expires
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	return toSerialize, nil
}

type NullableOTPVerifyResponse struct {
	value *OTPVerifyResponse
	isSet bool
}

func (v NullableOTPVerifyResponse) Get() *OTPVerifyResponse {
	return v.value
}

func (v *NullableOTPVerifyResponse) Set(val *OTPVerifyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOTPVerifyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOTPVerifyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOTPVerifyResponse(val *OTPVerifyResponse) *NullableOTPVerifyResponse {
	return &NullableOTPVerifyResponse{value: val, isSet: true}
}

func (v NullableOTPVerifyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOTPVerifyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


