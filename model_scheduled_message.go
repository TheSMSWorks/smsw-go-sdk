/*
The SMS Works API

The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed UK messages are refunded.

API version: 1.9.0
Contact: support@thesmsworks.co.uk
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ScheduledMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledMessage{}

// ScheduledMessage the scheduled message content
type ScheduledMessage struct {
	// The sender of the message. Should be no longer than 11 characters for alphanumeric or 15 characters for numeric sender ID's. No spaces or special characters.
	Sender *string `json:"sender,omitempty"`
	// Message to be sent to the recipient
	Content *string `json:"content,omitempty"`
	// For single scheduled messages, the mobile number of the recipient
	Destination *string `json:"destination,omitempty"`
	// For batch messages, the mobile numbers of each of the recipients
	Destinations []string `json:"destinations,omitempty"`
	// Date-time at which to send the batch. This is only used by the batch/schedule service.
	Schedule *string `json:"schedule,omitempty"`
}

// NewScheduledMessage instantiates a new ScheduledMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledMessage() *ScheduledMessage {
	this := ScheduledMessage{}
	return &this
}

// NewScheduledMessageWithDefaults instantiates a new ScheduledMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledMessageWithDefaults() *ScheduledMessage {
	this := ScheduledMessage{}
	return &this
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *ScheduledMessage) GetSender() string {
	if o == nil || IsNil(o.Sender) {
		var ret string
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledMessage) GetSenderOk() (*string, bool) {
	if o == nil || IsNil(o.Sender) {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *ScheduledMessage) HasSender() bool {
	if o != nil && !IsNil(o.Sender) {
		return true
	}

	return false
}

// SetSender gets a reference to the given string and assigns it to the Sender field.
func (o *ScheduledMessage) SetSender(v string) {
	o.Sender = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ScheduledMessage) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledMessage) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ScheduledMessage) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ScheduledMessage) SetContent(v string) {
	o.Content = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *ScheduledMessage) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledMessage) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *ScheduledMessage) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *ScheduledMessage) SetDestination(v string) {
	o.Destination = &v
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *ScheduledMessage) GetDestinations() []string {
	if o == nil || IsNil(o.Destinations) {
		var ret []string
		return ret
	}
	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledMessage) GetDestinationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Destinations) {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *ScheduledMessage) HasDestinations() bool {
	if o != nil && !IsNil(o.Destinations) {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given []string and assigns it to the Destinations field.
func (o *ScheduledMessage) SetDestinations(v []string) {
	o.Destinations = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *ScheduledMessage) GetSchedule() string {
	if o == nil || IsNil(o.Schedule) {
		var ret string
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledMessage) GetScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *ScheduledMessage) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given string and assigns it to the Schedule field.
func (o *ScheduledMessage) SetSchedule(v string) {
	o.Schedule = &v
}

func (o ScheduledMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sender) {
		toSerialize["sender"] = o.Sender
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Destinations) {
		toSerialize["destinations"] = o.Destinations
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	return toSerialize, nil
}

type NullableScheduledMessage struct {
	value *ScheduledMessage
	isSet bool
}

func (v NullableScheduledMessage) Get() *ScheduledMessage {
	return v.value
}

func (v *NullableScheduledMessage) Set(val *ScheduledMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledMessage(val *ScheduledMessage) *NullableScheduledMessage {
	return &NullableScheduledMessage{value: val, isSet: true}
}

func (v NullableScheduledMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


