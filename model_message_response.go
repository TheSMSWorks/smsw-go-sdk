/*
The SMS Works API

The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed UK messages are refunded.

API version: 1.9.0
Contact: support@thesmsworks.co.uk
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the MessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageResponse{}

// MessageResponse struct for MessageResponse
type MessageResponse struct {
	Batchid *string `json:"batchid,omitempty"`
	Content string `json:"content"`
	Created string `json:"created"`
	Customerid string `json:"customerid"`
	Deliveryreporturl *string `json:"deliveryreporturl,omitempty"`
	Destination float32 `json:"destination"`
	Failurereason *MessageResponseFailurereason `json:"failurereason,omitempty"`
	Id *string `json:"id,omitempty"`
	Identifier *string `json:"identifier,omitempty"`
	Keyword *string `json:"keyword,omitempty"`
	Messageid string `json:"messageid"`
	Modified string `json:"modified"`
	Schedule string `json:"schedule"`
	Status string `json:"status"`
	Sender string `json:"sender"`
	Tag string `json:"tag"`
}

type _MessageResponse MessageResponse

// NewMessageResponse instantiates a new MessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageResponse(content string, created string, customerid string, destination float32, messageid string, modified string, schedule string, status string, sender string, tag string) *MessageResponse {
	this := MessageResponse{}
	this.Content = content
	this.Created = created
	this.Customerid = customerid
	this.Destination = destination
	this.Messageid = messageid
	this.Modified = modified
	this.Schedule = schedule
	this.Status = status
	this.Sender = sender
	this.Tag = tag
	return &this
}

// NewMessageResponseWithDefaults instantiates a new MessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageResponseWithDefaults() *MessageResponse {
	this := MessageResponse{}
	return &this
}

// GetBatchid returns the Batchid field value if set, zero value otherwise.
func (o *MessageResponse) GetBatchid() string {
	if o == nil || IsNil(o.Batchid) {
		var ret string
		return ret
	}
	return *o.Batchid
}

// GetBatchidOk returns a tuple with the Batchid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetBatchidOk() (*string, bool) {
	if o == nil || IsNil(o.Batchid) {
		return nil, false
	}
	return o.Batchid, true
}

// HasBatchid returns a boolean if a field has been set.
func (o *MessageResponse) HasBatchid() bool {
	if o != nil && !IsNil(o.Batchid) {
		return true
	}

	return false
}

// SetBatchid gets a reference to the given string and assigns it to the Batchid field.
func (o *MessageResponse) SetBatchid(v string) {
	o.Batchid = &v
}

// GetContent returns the Content field value
func (o *MessageResponse) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *MessageResponse) SetContent(v string) {
	o.Content = v
}

// GetCreated returns the Created field value
func (o *MessageResponse) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *MessageResponse) SetCreated(v string) {
	o.Created = v
}

// GetCustomerid returns the Customerid field value
func (o *MessageResponse) GetCustomerid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Customerid
}

// GetCustomeridOk returns a tuple with the Customerid field value
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetCustomeridOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customerid, true
}

// SetCustomerid sets field value
func (o *MessageResponse) SetCustomerid(v string) {
	o.Customerid = v
}

// GetDeliveryreporturl returns the Deliveryreporturl field value if set, zero value otherwise.
func (o *MessageResponse) GetDeliveryreporturl() string {
	if o == nil || IsNil(o.Deliveryreporturl) {
		var ret string
		return ret
	}
	return *o.Deliveryreporturl
}

// GetDeliveryreporturlOk returns a tuple with the Deliveryreporturl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetDeliveryreporturlOk() (*string, bool) {
	if o == nil || IsNil(o.Deliveryreporturl) {
		return nil, false
	}
	return o.Deliveryreporturl, true
}

// HasDeliveryreporturl returns a boolean if a field has been set.
func (o *MessageResponse) HasDeliveryreporturl() bool {
	if o != nil && !IsNil(o.Deliveryreporturl) {
		return true
	}

	return false
}

// SetDeliveryreporturl gets a reference to the given string and assigns it to the Deliveryreporturl field.
func (o *MessageResponse) SetDeliveryreporturl(v string) {
	o.Deliveryreporturl = &v
}

// GetDestination returns the Destination field value
func (o *MessageResponse) GetDestination() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetDestinationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *MessageResponse) SetDestination(v float32) {
	o.Destination = v
}

// GetFailurereason returns the Failurereason field value if set, zero value otherwise.
func (o *MessageResponse) GetFailurereason() MessageResponseFailurereason {
	if o == nil || IsNil(o.Failurereason) {
		var ret MessageResponseFailurereason
		return ret
	}
	return *o.Failurereason
}

// GetFailurereasonOk returns a tuple with the Failurereason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetFailurereasonOk() (*MessageResponseFailurereason, bool) {
	if o == nil || IsNil(o.Failurereason) {
		return nil, false
	}
	return o.Failurereason, true
}

// HasFailurereason returns a boolean if a field has been set.
func (o *MessageResponse) HasFailurereason() bool {
	if o != nil && !IsNil(o.Failurereason) {
		return true
	}

	return false
}

// SetFailurereason gets a reference to the given MessageResponseFailurereason and assigns it to the Failurereason field.
func (o *MessageResponse) SetFailurereason(v MessageResponseFailurereason) {
	o.Failurereason = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MessageResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MessageResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MessageResponse) SetId(v string) {
	o.Id = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *MessageResponse) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *MessageResponse) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *MessageResponse) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetKeyword returns the Keyword field value if set, zero value otherwise.
func (o *MessageResponse) GetKeyword() string {
	if o == nil || IsNil(o.Keyword) {
		var ret string
		return ret
	}
	return *o.Keyword
}

// GetKeywordOk returns a tuple with the Keyword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetKeywordOk() (*string, bool) {
	if o == nil || IsNil(o.Keyword) {
		return nil, false
	}
	return o.Keyword, true
}

// HasKeyword returns a boolean if a field has been set.
func (o *MessageResponse) HasKeyword() bool {
	if o != nil && !IsNil(o.Keyword) {
		return true
	}

	return false
}

// SetKeyword gets a reference to the given string and assigns it to the Keyword field.
func (o *MessageResponse) SetKeyword(v string) {
	o.Keyword = &v
}

// GetMessageid returns the Messageid field value
func (o *MessageResponse) GetMessageid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Messageid
}

// GetMessageidOk returns a tuple with the Messageid field value
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetMessageidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Messageid, true
}

// SetMessageid sets field value
func (o *MessageResponse) SetMessageid(v string) {
	o.Messageid = v
}

// GetModified returns the Modified field value
func (o *MessageResponse) GetModified() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetModifiedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *MessageResponse) SetModified(v string) {
	o.Modified = v
}

// GetSchedule returns the Schedule field value
func (o *MessageResponse) GetSchedule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *MessageResponse) SetSchedule(v string) {
	o.Schedule = v
}

// GetStatus returns the Status field value
func (o *MessageResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MessageResponse) SetStatus(v string) {
	o.Status = v
}

// GetSender returns the Sender field value
func (o *MessageResponse) GetSender() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sender
}

// GetSenderOk returns a tuple with the Sender field value
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetSenderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sender, true
}

// SetSender sets field value
func (o *MessageResponse) SetSender(v string) {
	o.Sender = v
}

// GetTag returns the Tag field value
func (o *MessageResponse) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *MessageResponse) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *MessageResponse) SetTag(v string) {
	o.Tag = v
}

func (o MessageResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Batchid) {
		toSerialize["batchid"] = o.Batchid
	}
	toSerialize["content"] = o.Content
	toSerialize["created"] = o.Created
	toSerialize["customerid"] = o.Customerid
	if !IsNil(o.Deliveryreporturl) {
		toSerialize["deliveryreporturl"] = o.Deliveryreporturl
	}
	toSerialize["destination"] = o.Destination
	if !IsNil(o.Failurereason) {
		toSerialize["failurereason"] = o.Failurereason
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.Keyword) {
		toSerialize["keyword"] = o.Keyword
	}
	toSerialize["messageid"] = o.Messageid
	toSerialize["modified"] = o.Modified
	toSerialize["schedule"] = o.Schedule
	toSerialize["status"] = o.Status
	toSerialize["sender"] = o.Sender
	toSerialize["tag"] = o.Tag
	return toSerialize, nil
}

func (o *MessageResponse) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"content",
		"created",
		"customerid",
		"destination",
		"messageid",
		"modified",
		"schedule",
		"status",
		"sender",
		"tag",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageResponse := _MessageResponse{}

	err = json.Unmarshal(bytes, &varMessageResponse)

	if err != nil {
		return err
	}

	*o = MessageResponse(varMessageResponse)

	return err
}

type NullableMessageResponse struct {
	value *MessageResponse
	isSet bool
}

func (v NullableMessageResponse) Get() *MessageResponse {
	return v.value
}

func (v *NullableMessageResponse) Set(val *MessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageResponse(val *MessageResponse) *NullableMessageResponse {
	return &NullableMessageResponse{value: val, isSet: true}
}

func (v NullableMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


