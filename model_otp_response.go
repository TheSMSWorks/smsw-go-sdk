/*
The SMS Works API

The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed UK messages are refunded.

API version: 1.9.0
Contact: support@thesmsworks.co.uk
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OTPResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OTPResponse{}

// OTPResponse Response schema for the /otp/send method
type OTPResponse struct {
	// The messageid of the SMS used to send the OTP. Save this in your application to use when verifying passcodes.
	Messageid *string `json:"messageid,omitempty"`
	// The initial status of the OTP message.
	Status *string `json:"status,omitempty"`
	// The credit balance on your account
	Credits *float32 `json:"credits,omitempty"`
	// The number of credits used to send this message
	CreditsUsed *float32 `json:"creditsUsed,omitempty"`
	// The number of message parts used to send this message
	Messageparts *float32 `json:"messageparts,omitempty"`
}

// NewOTPResponse instantiates a new OTPResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOTPResponse() *OTPResponse {
	this := OTPResponse{}
	return &this
}

// NewOTPResponseWithDefaults instantiates a new OTPResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOTPResponseWithDefaults() *OTPResponse {
	this := OTPResponse{}
	return &this
}

// GetMessageid returns the Messageid field value if set, zero value otherwise.
func (o *OTPResponse) GetMessageid() string {
	if o == nil || IsNil(o.Messageid) {
		var ret string
		return ret
	}
	return *o.Messageid
}

// GetMessageidOk returns a tuple with the Messageid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPResponse) GetMessageidOk() (*string, bool) {
	if o == nil || IsNil(o.Messageid) {
		return nil, false
	}
	return o.Messageid, true
}

// HasMessageid returns a boolean if a field has been set.
func (o *OTPResponse) HasMessageid() bool {
	if o != nil && !IsNil(o.Messageid) {
		return true
	}

	return false
}

// SetMessageid gets a reference to the given string and assigns it to the Messageid field.
func (o *OTPResponse) SetMessageid(v string) {
	o.Messageid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OTPResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OTPResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OTPResponse) SetStatus(v string) {
	o.Status = &v
}

// GetCredits returns the Credits field value if set, zero value otherwise.
func (o *OTPResponse) GetCredits() float32 {
	if o == nil || IsNil(o.Credits) {
		var ret float32
		return ret
	}
	return *o.Credits
}

// GetCreditsOk returns a tuple with the Credits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPResponse) GetCreditsOk() (*float32, bool) {
	if o == nil || IsNil(o.Credits) {
		return nil, false
	}
	return o.Credits, true
}

// HasCredits returns a boolean if a field has been set.
func (o *OTPResponse) HasCredits() bool {
	if o != nil && !IsNil(o.Credits) {
		return true
	}

	return false
}

// SetCredits gets a reference to the given float32 and assigns it to the Credits field.
func (o *OTPResponse) SetCredits(v float32) {
	o.Credits = &v
}

// GetCreditsUsed returns the CreditsUsed field value if set, zero value otherwise.
func (o *OTPResponse) GetCreditsUsed() float32 {
	if o == nil || IsNil(o.CreditsUsed) {
		var ret float32
		return ret
	}
	return *o.CreditsUsed
}

// GetCreditsUsedOk returns a tuple with the CreditsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPResponse) GetCreditsUsedOk() (*float32, bool) {
	if o == nil || IsNil(o.CreditsUsed) {
		return nil, false
	}
	return o.CreditsUsed, true
}

// HasCreditsUsed returns a boolean if a field has been set.
func (o *OTPResponse) HasCreditsUsed() bool {
	if o != nil && !IsNil(o.CreditsUsed) {
		return true
	}

	return false
}

// SetCreditsUsed gets a reference to the given float32 and assigns it to the CreditsUsed field.
func (o *OTPResponse) SetCreditsUsed(v float32) {
	o.CreditsUsed = &v
}

// GetMessageparts returns the Messageparts field value if set, zero value otherwise.
func (o *OTPResponse) GetMessageparts() float32 {
	if o == nil || IsNil(o.Messageparts) {
		var ret float32
		return ret
	}
	return *o.Messageparts
}

// GetMessagepartsOk returns a tuple with the Messageparts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OTPResponse) GetMessagepartsOk() (*float32, bool) {
	if o == nil || IsNil(o.Messageparts) {
		return nil, false
	}
	return o.Messageparts, true
}

// HasMessageparts returns a boolean if a field has been set.
func (o *OTPResponse) HasMessageparts() bool {
	if o != nil && !IsNil(o.Messageparts) {
		return true
	}

	return false
}

// SetMessageparts gets a reference to the given float32 and assigns it to the Messageparts field.
func (o *OTPResponse) SetMessageparts(v float32) {
	o.Messageparts = &v
}

func (o OTPResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OTPResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Messageid) {
		toSerialize["messageid"] = o.Messageid
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Credits) {
		toSerialize["credits"] = o.Credits
	}
	if !IsNil(o.CreditsUsed) {
		toSerialize["creditsUsed"] = o.CreditsUsed
	}
	if !IsNil(o.Messageparts) {
		toSerialize["messageparts"] = o.Messageparts
	}
	return toSerialize, nil
}

type NullableOTPResponse struct {
	value *OTPResponse
	isSet bool
}

func (v NullableOTPResponse) Get() *OTPResponse {
	return v.value
}

func (v *NullableOTPResponse) Set(val *OTPResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOTPResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOTPResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOTPResponse(val *OTPResponse) *NullableOTPResponse {
	return &NullableOTPResponse{value: val, isSet: true}
}

func (v NullableOTPResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOTPResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


