/*
The SMS Works API

The SMS Works provides a low-cost, reliable SMS API for developers. Pay only for delivered texts, all failed UK messages are refunded.

API version: 1.9.0
Contact: support@thesmsworks.co.uk
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ScheduledMessagesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledMessagesResponse{}

// ScheduledMessagesResponse details of a message scheduled to be sent at a specified date and time
type ScheduledMessagesResponse struct {
	// The status of the scheduled message (either 'SCHEDULED', 'PROCESSED' or 'CANCELLED')
	Status *string `json:"status,omitempty"`
	// The scheduled message ID
	Id *string `json:"id,omitempty"`
	// Describes whether the a batch of messages has been scheduled, or just a single message
	Batch *bool `json:"batch,omitempty"`
	Message *ScheduledMessagesResponseMessage `json:"message,omitempty"`
}

// NewScheduledMessagesResponse instantiates a new ScheduledMessagesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledMessagesResponse() *ScheduledMessagesResponse {
	this := ScheduledMessagesResponse{}
	return &this
}

// NewScheduledMessagesResponseWithDefaults instantiates a new ScheduledMessagesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledMessagesResponseWithDefaults() *ScheduledMessagesResponse {
	this := ScheduledMessagesResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ScheduledMessagesResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledMessagesResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ScheduledMessagesResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ScheduledMessagesResponse) SetStatus(v string) {
	o.Status = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ScheduledMessagesResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledMessagesResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ScheduledMessagesResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ScheduledMessagesResponse) SetId(v string) {
	o.Id = &v
}

// GetBatch returns the Batch field value if set, zero value otherwise.
func (o *ScheduledMessagesResponse) GetBatch() bool {
	if o == nil || IsNil(o.Batch) {
		var ret bool
		return ret
	}
	return *o.Batch
}

// GetBatchOk returns a tuple with the Batch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledMessagesResponse) GetBatchOk() (*bool, bool) {
	if o == nil || IsNil(o.Batch) {
		return nil, false
	}
	return o.Batch, true
}

// HasBatch returns a boolean if a field has been set.
func (o *ScheduledMessagesResponse) HasBatch() bool {
	if o != nil && !IsNil(o.Batch) {
		return true
	}

	return false
}

// SetBatch gets a reference to the given bool and assigns it to the Batch field.
func (o *ScheduledMessagesResponse) SetBatch(v bool) {
	o.Batch = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ScheduledMessagesResponse) GetMessage() ScheduledMessagesResponseMessage {
	if o == nil || IsNil(o.Message) {
		var ret ScheduledMessagesResponseMessage
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledMessagesResponse) GetMessageOk() (*ScheduledMessagesResponseMessage, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ScheduledMessagesResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given ScheduledMessagesResponseMessage and assigns it to the Message field.
func (o *ScheduledMessagesResponse) SetMessage(v ScheduledMessagesResponseMessage) {
	o.Message = &v
}

func (o ScheduledMessagesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledMessagesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Batch) {
		toSerialize["batch"] = o.Batch
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableScheduledMessagesResponse struct {
	value *ScheduledMessagesResponse
	isSet bool
}

func (v NullableScheduledMessagesResponse) Get() *ScheduledMessagesResponse {
	return v.value
}

func (v *NullableScheduledMessagesResponse) Set(val *ScheduledMessagesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledMessagesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledMessagesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledMessagesResponse(val *ScheduledMessagesResponse) *NullableScheduledMessagesResponse {
	return &NullableScheduledMessagesResponse{value: val, isSet: true}
}

func (v NullableScheduledMessagesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledMessagesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


